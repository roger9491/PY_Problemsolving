'''
M: 初始魔法值
S: 距離
T: 島沉沒的時間
守望者 跑步速度 17m/S
      技能 60m/S 消耗10M
      恢復魔法值 4/S
 這題 使用技能是不需要冷卻的，所以只需要考慮 技能的 消耗 和 休息時間，我們先來假設一種情狀況，以此來決定我們的狀態轉移要如何寫
 ，假設 初始魔法值:0 時間 1 秒:17m  
 2秒:34m  (全程走路)
 3秒:51m  (全程走路)
 4秒:68m(全程走路) / 60m(3秒休息 1秒技能) 
 5秒:85m(全程走路) / 77m (3秒休息 1秒技能1秒走路)
 6秒:102m(全程走路) / 94m (3秒休息 1秒技能2秒走路) 
 7秒:119m(全程走路) / 111m (3秒休息 1秒技能3秒走路 妳以為是這樣嗎?)
                   / 120m  (5秒休息 2秒放技能)
所以推完可以知道 不是能放技能就放技能 這樣沒有比較快 因為 你如果休息3秒只為了放一個技能 多了2點魔法值浪費掉
但是秒數 足夠你休息到 放完全部的技能不會有剩餘的魔法值 就會比較快!!
所以 你必須去比較 當前的時間 應該要之前的路程+走路  還是 直接用技能跑完 
dp[i]:第i秒最遠距離  walk:走路  flash:全程用技能
dp[i] = max(walk+dp[i-1],flash)

'''
n = list(map(int,input().split(" ")))

dp = [0]*(n[2]+1)   #建立初始狀態
flash = 0           #累計技能的距離
m = n[0]            #初始魔法值

for i in range(1,n[2]+1):   #每一個時間點
    walk = 17       #走路
    if  m >= 10:    #我們要模擬 放技能+休息的狀態 大於等於10可以放技能
        flash +=60  #累積60m
        m -= 10     #扣掉 魔法值
    else:           #休息的時候
        m += 4
    dp[i] = max(walk + dp[i-1],flash)

    if dp[i] >= n[1]:   #當距離大於指定的就可以跳開
        print("Yes")
        print(i)
        break
else:
    print("No")
    print(dp[-1])
