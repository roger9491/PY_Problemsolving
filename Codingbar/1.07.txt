'''
字串 如何變串列
(1) 迭代字串 加到新串列
list1 = []
for i in string:
    list1.append(i)

(2) 借用list()函式
 list1 = list(string)
'''
# n = input()
# n = list(n)
# print(n)

'''
如何把串列顛倒?
(1)
    利用for
(2)
    串列.reverse()
'''

# n = [1,2]
# n.reverse()
# print(n)


'''
如何把串列變成數字?

串列 -> 字串 -> int() 

(1)
    list = 串列
    number = "".join(list)
ex
    n = ['1','2']
    n = "".join(n)
    print(int(n))
(2) 原始
    num = ""
    n = ['1','2']
    for i in n:
        num += i
    print(int(num))

'''
# num = ""
# n = ['1','2']
# for i in n:
#     num += i
# print(int(num))

# a = "123"
# a = int(a)
# print(type(a))
# print(type(b))


'''
遞迴 
函式 呼叫 自己

'''

# def function():
#     print(1)
#     function()

# function()

'''

1 + 2 + 3 + ... + 100 = ?
(1)
    迭代 
    t = 0
    for i in range(1,101):
        t += i
    print(t)
    (((1 + 2) + 3) + 4) +... + 100 = ?
    1
    1 + 2
    1 + 2 + 3
(2)
    遞迴
    (1 + 2 + 3 + 4 +... + 100)
    (1 + 2 + 3 + 4 +... 99) + 100
    (1 + 2 + 3 + 4 +... + 98 ) 99 + 100
    :
    :
    :
    (1 + 2) + 3 + 4 ...
    (1) + 2 + 3 + 4 ...

    1. 邊界值
    2. 遞迴關係式
遞迴執行的過程
ex. f(5) = f(4) + 5
           f(4) = f(3) + 4
                  f(3) = f(2) + 3
                         f(2) = f(1) + 2
                                1 


結論

    如何用遞迴 去解決問題?
    先找出兩個東西
    1. 邊界值
    2. 遞迴關係式
    f(100) => 用意: 計算 1 +...+ 100
    f(99)  => 用意: 計算 1 +...+ 99

    找到了 原本的問題f(100) 和 較小的問題 f(99)
                觀察兩之間的關係
    f(100) = f(99) + 100
    把數字換成 變數n
    f(n) = f(n-1) + n
    

    1. 邊界值   f(1) = 1
    2. 遞迴關係式 f(n) = f(n-1) + n
''' 
# def function(n):
#     if n == 1:
#         return 1
#     return function(n-1) + n

# print(function(6))


'''
自學之路

前提: L1 所有題目寫完

    若遇到不會 可以把 專精班的作業題目寫完


https://yuihuang.com/apcs/

完成所有第一題 => 實作拿到 2 級分 ，同時觀念題 成績也會一併上升(C語言不能忘太多)

實作拿到 3 級分 => 四題拿到前兩題的滿分

先去學 二維串列 / 二維矩陣 => APCS歷屆第二題 除了 2018	10 第二題 其他都要寫完
二維串列 / 二維矩陣，老師可以給講義
實作拿到 3 級分



'''